@using ConesaApp.Client.Pages.Services
@using ConesaApp.Database.Data.Entities

@inject IHttpService http
@page "/Inicio/Pagos"

    <div class="mainContainer">
        <table class="table">
          <tr>
            <th>Vendedor</th>
            <th>Fecha</th>
            <th>Monto</th>
            <th>Cliente</th>
            <th>Patente</th>
            <th>N° de Póliza</th>
            <th></th>
          </tr>
          @foreach (Pago p in pagos)
         {
             <tr>
               <td>@p.Usuario.Nombre @p.Usuario.Apellido</td>
               <td>@p.Fecha.ToShortDateString()</td>
               <td>$@p.Monto</td>
               <td>@p.Cliente.Nombre @p.Cliente.Apellido</td>
               <td>@p.Poliza.Vehiculo.Patente</td>
               <td>@p.Poliza.NroPoliza</td>
               <td>
                   <button @onclick="()=>mostrarConfirmacionEliminar(p)" class="btnEliminar">
                       <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#822F33" class="bi bi-trash3" viewBox="0 0 16 16">
                          <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H2.506a.58.58 0 0 0-.01 0H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1h-.995a.59.59 0 0 0-.01 0zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47ZM8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5"/>
                        </svg>
                   </button>
               </td>
            </tr>
         }
        </table>
        @if (pagoEliminar != null && !cerrarConfirmacion)
       {
           <ConfirmacionEliminarPago PagoEliminar="pagoEliminar" Cerrar="cerrarConf"/>
       }
    </div>

@code {
    [Parameter]
    public string Busqueda { get; set; }

    List<Pago> pagos = new List<Pago>();
    Vehiculo vehiculo = new Vehiculo();
    Pago pagoEliminar;
    bool cerrarConfirmacion = false; 

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await readPagos();
    }
    private async Task readPagos()
    {
        var respuesta = await http.Get<List<Pago>>($"/Pagos");
        if (!respuesta.Error)
        {
            pagos = respuesta.Respuesta;
        }
        StateHasChanged();
    }
    private void mostrarConfirmacionEliminar(Pago pago)
    {
        pagoEliminar = pago;
    }
    private async void cerrarConf()
    {
        cerrarConfirmacion = true;
        pagoEliminar = null;
        cerrarConfirmacion = false;
        await readPagos();
    }
    private async Task readVehiculoPorPoliza(int poliza)
    {
        var respuesta = await http.Get<Vehiculo>($"/VehiculoPoliza/{poliza}");
        if (!respuesta.Error)
        {
            vehiculo = respuesta.Respuesta;
        }
    }

    protected override async Task OnParametersSetAsync()
    {

        if (!String.IsNullOrEmpty(Busqueda))
        {
            var respuesta = await http.Get<List<Pago>>($"/Pagos/Busqueda?query={Busqueda}");
                if (!respuesta.Error)
                {
                    pagos = respuesta.Respuesta;
                }
        }
        else if (String.IsNullOrEmpty(Busqueda))
        {
            var respuesta = await http.Get<List<Pago>>($"/Pagos");
            if (!respuesta.Error)
            {
                pagos = respuesta.Respuesta;
            }
        }
    }
}
