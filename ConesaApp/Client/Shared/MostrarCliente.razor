@using ConesaApp.Client.Pages.Services
@using ConesaApp.Database.Data.Entities
@using System.Globalization
@inject IHttpService http
<div class="card">
    <div class="up-bar">
        <button class="btn">
            <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
              <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
              <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z"/>
            </svg>
        </button>
        <button class="btn" @onclick="Cerrar">
            <svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" fill="#822F33" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
              <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293z"/>
            </svg>
        </button>
    </div>
    <div class="datos">
        <div>
            
            <div class="datos-personales">
                <h4>Datos personales</h4>
                <p><span style="font-style:italic">Nombre:</span> @vehiculo.Cliente.Nombre @vehiculo.Cliente.Apellido</p>
                <p>Ciudad: @vehiculo.Cliente.Ciudad</p>
                <p>Dirección: @vehiculo.Cliente.Direccion</p>
                <p>Teléfono: @vehiculo.Cliente.Telefono</p>
                @if (@vehiculo.Cliente.Activo)
                {
                    <p>Estado: Activo</p>
                }
                else
                {
                    <p>Estado: Inactivo</p>
                }
            </div>
            
            <div class="datos-vehiculo">
                <h4>Datos del vehículo</h4>
                <p>Patente: @vehiculo.Patente</p>
                <p>Marca: @vehiculo.Marca</p>
                <p>Año: @vehiculo.Año</p>
            </div>
        </div>
       
       <div>
            <div class="datos-poliza">
                <h4>Datos de la póliza</h4>
                <p>Empresa: @vehiculo.Poliza.Empresa.Nombre</p>
                <p>Valor asegurado: $@string.Format(String.Format("{0:C}", @vehiculo.Poliza.ValorAsegurado)).TrimEnd('¤')</p>
                <p>Vigencia: @vehiculo.Poliza.InicioVigencia.ToShortDateString() - @vehiculo.Poliza.FinVigencia.ToShortDateString()</p>
                <p>Tipo de cobertura: @vehiculo.Poliza.Cobertura.Tipo</p>
                <p>Número de póliza: @vehiculo.Poliza.NroPoliza</p>
                <p>Valor de la cuota: $@string.Format(String.Format("{0:C}", @vehiculo.Poliza.ValorCuota)).TrimEnd('¤') </p>
            </div>
            <button class="btn-baja" @onclick="mostrarConfirmacion">Dar de baja</button>
       </div> 
        
    </div>
    @if (mostrarConfirmacionBaja)
    {
        <ConfirmacionBajaCliente Baja="baja" Cerrar="CerrarConfirmacion" vehiculo="vehiculo" DarBajaCliente="InvokeDarBajaCliente"/>
    }
</div>



@code {
    [Parameter] 
    public Vehiculo vehiculo { get; set; }
    [Parameter]
    public EventCallback Cerrar { get; set; }


    bool mostrarConfirmacionBaja = false;
    bool cerrarMostrarBaja = false;
    bool baja = false;


    public void mostrarConfirmacion()
    {
        mostrarConfirmacionBaja = true;
    }
    public void CerrarConfirmacion()
    {
        mostrarConfirmacionBaja = false;
    }

    private async Task InvokeDarBajaCliente()
    {
        Cliente cliente = vehiculo.Cliente;
        Console.Write(cliente.ClienteID);
        var response = await http.Delete($"/Baja/{cliente.ClienteID}");
        if (response.Error)
        {
            var body = "Error";
        }
        baja = true;
        Console.Write("Confirmacion dado de baja");
        CerrarConfirmacion();
        await Cerrar.InvokeAsync(null);
        //await Cancelar.InvokeAsync(null);
    }
}
